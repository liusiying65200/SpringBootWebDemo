<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.hualisheng.springBootWebDemo.mapper.OrderFeeDetailMapper" >
  <resultMap id="BaseResultMap" type="net.hualisheng.springBootWebDemo.model.OrderFeeDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="worker_id" property="workerId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="original_money" property="originalMoney" jdbcType="DOUBLE" />
    <result column="discount_money" property="discountMoney" jdbcType="DOUBLE" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="deposit" property="deposit" jdbcType="INTEGER" />
    <result column="deposit_award" property="depositAward" jdbcType="DOUBLE" />
    <result column="award" property="award" jdbcType="DOUBLE" />
    <result column="info_money" property="infoMoney" jdbcType="DOUBLE" />
    <result column="activity_rate" property="activityRate" jdbcType="REAL" />
    <result column="activity_money" property="activityMoney" jdbcType="DOUBLE" />
    <result column="agent_pay" property="agentPay" jdbcType="DOUBLE" />
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
    <result column="grade_name" property="gradeName" jdbcType="VARCHAR" />
    <result column="grade_number" property="gradeNumber" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="account_log_sn" property="accountLogSn" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="brokerage_refund_money" property="brokerageRefundMoney" jdbcType="DOUBLE" />
    <result column="bonus_money" property="bonusMoney" jdbcType="DOUBLE" />
    <result column="make_good_money" property="makeGoodMoney" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, worker_id, order_id, original_money, discount_money, money, deposit, deposit_award, 
    award, info_money, activity_rate, activity_money, agent_pay, category_name, grade_name, 
    grade_number, create_time, account_log_sn, remark, brokerage_refund_money, bonus_money, 
    make_good_money
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.hualisheng.springBootWebDemo.model.OrderFeeDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from order_fee_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_fee_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_fee_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.hualisheng.springBootWebDemo.model.OrderFeeDetailExample" >
    delete from order_fee_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.hualisheng.springBootWebDemo.model.OrderFeeDetail" >
    insert into order_fee_detail (id, worker_id, order_id, 
      original_money, discount_money, money, 
      deposit, deposit_award, award, 
      info_money, activity_rate, activity_money, 
      agent_pay, category_name, grade_name, 
      grade_number, create_time, account_log_sn, 
      remark, brokerage_refund_money, bonus_money, 
      make_good_money)
    values (#{id,jdbcType=INTEGER}, #{workerId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, 
      #{originalMoney,jdbcType=DOUBLE}, #{discountMoney,jdbcType=DOUBLE}, #{money,jdbcType=DOUBLE}, 
      #{deposit,jdbcType=INTEGER}, #{depositAward,jdbcType=DOUBLE}, #{award,jdbcType=DOUBLE}, 
      #{infoMoney,jdbcType=DOUBLE}, #{activityRate,jdbcType=REAL}, #{activityMoney,jdbcType=DOUBLE}, 
      #{agentPay,jdbcType=DOUBLE}, #{categoryName,jdbcType=VARCHAR}, #{gradeName,jdbcType=VARCHAR}, 
      #{gradeNumber,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{accountLogSn,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{brokerageRefundMoney,jdbcType=DOUBLE}, #{bonusMoney,jdbcType=DOUBLE}, 
      #{makeGoodMoney,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="net.hualisheng.springBootWebDemo.model.OrderFeeDetail" >
    insert into order_fee_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="workerId != null" >
        worker_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="originalMoney != null" >
        original_money,
      </if>
      <if test="discountMoney != null" >
        discount_money,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="deposit != null" >
        deposit,
      </if>
      <if test="depositAward != null" >
        deposit_award,
      </if>
      <if test="award != null" >
        award,
      </if>
      <if test="infoMoney != null" >
        info_money,
      </if>
      <if test="activityRate != null" >
        activity_rate,
      </if>
      <if test="activityMoney != null" >
        activity_money,
      </if>
      <if test="agentPay != null" >
        agent_pay,
      </if>
      <if test="categoryName != null" >
        category_name,
      </if>
      <if test="gradeName != null" >
        grade_name,
      </if>
      <if test="gradeNumber != null" >
        grade_number,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="accountLogSn != null" >
        account_log_sn,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="brokerageRefundMoney != null" >
        brokerage_refund_money,
      </if>
      <if test="bonusMoney != null" >
        bonus_money,
      </if>
      <if test="makeGoodMoney != null" >
        make_good_money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="workerId != null" >
        #{workerId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="originalMoney != null" >
        #{originalMoney,jdbcType=DOUBLE},
      </if>
      <if test="discountMoney != null" >
        #{discountMoney,jdbcType=DOUBLE},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="deposit != null" >
        #{deposit,jdbcType=INTEGER},
      </if>
      <if test="depositAward != null" >
        #{depositAward,jdbcType=DOUBLE},
      </if>
      <if test="award != null" >
        #{award,jdbcType=DOUBLE},
      </if>
      <if test="infoMoney != null" >
        #{infoMoney,jdbcType=DOUBLE},
      </if>
      <if test="activityRate != null" >
        #{activityRate,jdbcType=REAL},
      </if>
      <if test="activityMoney != null" >
        #{activityMoney,jdbcType=DOUBLE},
      </if>
      <if test="agentPay != null" >
        #{agentPay,jdbcType=DOUBLE},
      </if>
      <if test="categoryName != null" >
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="gradeName != null" >
        #{gradeName,jdbcType=VARCHAR},
      </if>
      <if test="gradeNumber != null" >
        #{gradeNumber,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountLogSn != null" >
        #{accountLogSn,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="brokerageRefundMoney != null" >
        #{brokerageRefundMoney,jdbcType=DOUBLE},
      </if>
      <if test="bonusMoney != null" >
        #{bonusMoney,jdbcType=DOUBLE},
      </if>
      <if test="makeGoodMoney != null" >
        #{makeGoodMoney,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.hualisheng.springBootWebDemo.model.OrderFeeDetailExample" resultType="java.lang.Integer" >
    select count(*) from order_fee_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_fee_detail
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.workerId != null" >
        worker_id = #{record.workerId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.originalMoney != null" >
        original_money = #{record.originalMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.discountMoney != null" >
        discount_money = #{record.discountMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.deposit != null" >
        deposit = #{record.deposit,jdbcType=INTEGER},
      </if>
      <if test="record.depositAward != null" >
        deposit_award = #{record.depositAward,jdbcType=DOUBLE},
      </if>
      <if test="record.award != null" >
        award = #{record.award,jdbcType=DOUBLE},
      </if>
      <if test="record.infoMoney != null" >
        info_money = #{record.infoMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.activityRate != null" >
        activity_rate = #{record.activityRate,jdbcType=REAL},
      </if>
      <if test="record.activityMoney != null" >
        activity_money = #{record.activityMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.agentPay != null" >
        agent_pay = #{record.agentPay,jdbcType=DOUBLE},
      </if>
      <if test="record.categoryName != null" >
        category_name = #{record.categoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeName != null" >
        grade_name = #{record.gradeName,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeNumber != null" >
        grade_number = #{record.gradeNumber,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accountLogSn != null" >
        account_log_sn = #{record.accountLogSn,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.brokerageRefundMoney != null" >
        brokerage_refund_money = #{record.brokerageRefundMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.bonusMoney != null" >
        bonus_money = #{record.bonusMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.makeGoodMoney != null" >
        make_good_money = #{record.makeGoodMoney,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_fee_detail
    set id = #{record.id,jdbcType=INTEGER},
      worker_id = #{record.workerId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      original_money = #{record.originalMoney,jdbcType=DOUBLE},
      discount_money = #{record.discountMoney,jdbcType=DOUBLE},
      money = #{record.money,jdbcType=DOUBLE},
      deposit = #{record.deposit,jdbcType=INTEGER},
      deposit_award = #{record.depositAward,jdbcType=DOUBLE},
      award = #{record.award,jdbcType=DOUBLE},
      info_money = #{record.infoMoney,jdbcType=DOUBLE},
      activity_rate = #{record.activityRate,jdbcType=REAL},
      activity_money = #{record.activityMoney,jdbcType=DOUBLE},
      agent_pay = #{record.agentPay,jdbcType=DOUBLE},
      category_name = #{record.categoryName,jdbcType=VARCHAR},
      grade_name = #{record.gradeName,jdbcType=VARCHAR},
      grade_number = #{record.gradeNumber,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      account_log_sn = #{record.accountLogSn,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      brokerage_refund_money = #{record.brokerageRefundMoney,jdbcType=DOUBLE},
      bonus_money = #{record.bonusMoney,jdbcType=DOUBLE},
      make_good_money = #{record.makeGoodMoney,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.hualisheng.springBootWebDemo.model.OrderFeeDetail" >
    update order_fee_detail
    <set >
      <if test="workerId != null" >
        worker_id = #{workerId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="originalMoney != null" >
        original_money = #{originalMoney,jdbcType=DOUBLE},
      </if>
      <if test="discountMoney != null" >
        discount_money = #{discountMoney,jdbcType=DOUBLE},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="deposit != null" >
        deposit = #{deposit,jdbcType=INTEGER},
      </if>
      <if test="depositAward != null" >
        deposit_award = #{depositAward,jdbcType=DOUBLE},
      </if>
      <if test="award != null" >
        award = #{award,jdbcType=DOUBLE},
      </if>
      <if test="infoMoney != null" >
        info_money = #{infoMoney,jdbcType=DOUBLE},
      </if>
      <if test="activityRate != null" >
        activity_rate = #{activityRate,jdbcType=REAL},
      </if>
      <if test="activityMoney != null" >
        activity_money = #{activityMoney,jdbcType=DOUBLE},
      </if>
      <if test="agentPay != null" >
        agent_pay = #{agentPay,jdbcType=DOUBLE},
      </if>
      <if test="categoryName != null" >
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="gradeName != null" >
        grade_name = #{gradeName,jdbcType=VARCHAR},
      </if>
      <if test="gradeNumber != null" >
        grade_number = #{gradeNumber,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountLogSn != null" >
        account_log_sn = #{accountLogSn,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="brokerageRefundMoney != null" >
        brokerage_refund_money = #{brokerageRefundMoney,jdbcType=DOUBLE},
      </if>
      <if test="bonusMoney != null" >
        bonus_money = #{bonusMoney,jdbcType=DOUBLE},
      </if>
      <if test="makeGoodMoney != null" >
        make_good_money = #{makeGoodMoney,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.hualisheng.springBootWebDemo.model.OrderFeeDetail" >
    update order_fee_detail
    set worker_id = #{workerId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      original_money = #{originalMoney,jdbcType=DOUBLE},
      discount_money = #{discountMoney,jdbcType=DOUBLE},
      money = #{money,jdbcType=DOUBLE},
      deposit = #{deposit,jdbcType=INTEGER},
      deposit_award = #{depositAward,jdbcType=DOUBLE},
      award = #{award,jdbcType=DOUBLE},
      info_money = #{infoMoney,jdbcType=DOUBLE},
      activity_rate = #{activityRate,jdbcType=REAL},
      activity_money = #{activityMoney,jdbcType=DOUBLE},
      agent_pay = #{agentPay,jdbcType=DOUBLE},
      category_name = #{categoryName,jdbcType=VARCHAR},
      grade_name = #{gradeName,jdbcType=VARCHAR},
      grade_number = #{gradeNumber,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      account_log_sn = #{accountLogSn,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      brokerage_refund_money = #{brokerageRefundMoney,jdbcType=DOUBLE},
      bonus_money = #{bonusMoney,jdbcType=DOUBLE},
      make_good_money = #{makeGoodMoney,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>