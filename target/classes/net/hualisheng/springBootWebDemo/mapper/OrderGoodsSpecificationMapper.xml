<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.hualisheng.springBootWebDemo.mapper.OrderGoodsSpecificationMapper" >
  <resultMap id="BaseResultMap" type="net.hualisheng.springBootWebDemo.model.OrderGoodsSpecification" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="spec_id" property="specId" jdbcType="INTEGER" />
    <result column="numbers" property="numbers" jdbcType="REAL" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="brand_model" property="brandModel" jdbcType="VARCHAR" />
    <result column="customer_payment" property="customerPayment" jdbcType="REAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="spec_price" property="specPrice" jdbcType="REAL" />
    <result column="worker_spec_price" property="workerSpecPrice" jdbcType="REAL" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="spec_name" property="specName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="net.hualisheng.springBootWebDemo.model.OrderGoodsSpecificationWithBLOBs" extends="BaseResultMap" >
    <result column="descripation" property="descripation" jdbcType="LONGVARCHAR" />
    <result column="images" property="images" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, shop_id, order_id, spec_id, numbers, brand, brand_model, customer_payment, create_time, 
    status, spec_price, worker_spec_price, goods_name, spec_name
  </sql>
  <sql id="Blob_Column_List" >
    descripation, images
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="net.hualisheng.springBootWebDemo.model.OrderGoodsSpecificationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_goods_specification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.hualisheng.springBootWebDemo.model.OrderGoodsSpecificationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from order_goods_specification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_goods_specification
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_goods_specification
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.hualisheng.springBootWebDemo.model.OrderGoodsSpecificationExample" >
    delete from order_goods_specification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.hualisheng.springBootWebDemo.model.OrderGoodsSpecificationWithBLOBs" >
    insert into order_goods_specification (id, shop_id, order_id, 
      spec_id, numbers, brand, 
      brand_model, customer_payment, create_time, 
      status, spec_price, worker_spec_price, 
      goods_name, spec_name, descripation, 
      images)
    values (#{id,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, 
      #{specId,jdbcType=INTEGER}, #{numbers,jdbcType=REAL}, #{brand,jdbcType=VARCHAR}, 
      #{brandModel,jdbcType=VARCHAR}, #{customerPayment,jdbcType=REAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{specPrice,jdbcType=REAL}, #{workerSpecPrice,jdbcType=REAL}, 
      #{goodsName,jdbcType=VARCHAR}, #{specName,jdbcType=VARCHAR}, #{descripation,jdbcType=LONGVARCHAR}, 
      #{images,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.hualisheng.springBootWebDemo.model.OrderGoodsSpecificationWithBLOBs" >
    insert into order_goods_specification
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="specId != null" >
        spec_id,
      </if>
      <if test="numbers != null" >
        numbers,
      </if>
      <if test="brand != null" >
        brand,
      </if>
      <if test="brandModel != null" >
        brand_model,
      </if>
      <if test="customerPayment != null" >
        customer_payment,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="specPrice != null" >
        spec_price,
      </if>
      <if test="workerSpecPrice != null" >
        worker_spec_price,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="specName != null" >
        spec_name,
      </if>
      <if test="descripation != null" >
        descripation,
      </if>
      <if test="images != null" >
        images,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="specId != null" >
        #{specId,jdbcType=INTEGER},
      </if>
      <if test="numbers != null" >
        #{numbers,jdbcType=REAL},
      </if>
      <if test="brand != null" >
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="brandModel != null" >
        #{brandModel,jdbcType=VARCHAR},
      </if>
      <if test="customerPayment != null" >
        #{customerPayment,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="specPrice != null" >
        #{specPrice,jdbcType=REAL},
      </if>
      <if test="workerSpecPrice != null" >
        #{workerSpecPrice,jdbcType=REAL},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="specName != null" >
        #{specName,jdbcType=VARCHAR},
      </if>
      <if test="descripation != null" >
        #{descripation,jdbcType=LONGVARCHAR},
      </if>
      <if test="images != null" >
        #{images,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.hualisheng.springBootWebDemo.model.OrderGoodsSpecificationExample" resultType="java.lang.Integer" >
    select count(*) from order_goods_specification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_goods_specification
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.specId != null" >
        spec_id = #{record.specId,jdbcType=INTEGER},
      </if>
      <if test="record.numbers != null" >
        numbers = #{record.numbers,jdbcType=REAL},
      </if>
      <if test="record.brand != null" >
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.brandModel != null" >
        brand_model = #{record.brandModel,jdbcType=VARCHAR},
      </if>
      <if test="record.customerPayment != null" >
        customer_payment = #{record.customerPayment,jdbcType=REAL},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.specPrice != null" >
        spec_price = #{record.specPrice,jdbcType=REAL},
      </if>
      <if test="record.workerSpecPrice != null" >
        worker_spec_price = #{record.workerSpecPrice,jdbcType=REAL},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.specName != null" >
        spec_name = #{record.specName,jdbcType=VARCHAR},
      </if>
      <if test="record.descripation != null" >
        descripation = #{record.descripation,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.images != null" >
        images = #{record.images,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update order_goods_specification
    set id = #{record.id,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      spec_id = #{record.specId,jdbcType=INTEGER},
      numbers = #{record.numbers,jdbcType=REAL},
      brand = #{record.brand,jdbcType=VARCHAR},
      brand_model = #{record.brandModel,jdbcType=VARCHAR},
      customer_payment = #{record.customerPayment,jdbcType=REAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      spec_price = #{record.specPrice,jdbcType=REAL},
      worker_spec_price = #{record.workerSpecPrice,jdbcType=REAL},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      spec_name = #{record.specName,jdbcType=VARCHAR},
      descripation = #{record.descripation,jdbcType=LONGVARCHAR},
      images = #{record.images,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_goods_specification
    set id = #{record.id,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      spec_id = #{record.specId,jdbcType=INTEGER},
      numbers = #{record.numbers,jdbcType=REAL},
      brand = #{record.brand,jdbcType=VARCHAR},
      brand_model = #{record.brandModel,jdbcType=VARCHAR},
      customer_payment = #{record.customerPayment,jdbcType=REAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      spec_price = #{record.specPrice,jdbcType=REAL},
      worker_spec_price = #{record.workerSpecPrice,jdbcType=REAL},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      spec_name = #{record.specName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.hualisheng.springBootWebDemo.model.OrderGoodsSpecificationWithBLOBs" >
    update order_goods_specification
    <set >
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="specId != null" >
        spec_id = #{specId,jdbcType=INTEGER},
      </if>
      <if test="numbers != null" >
        numbers = #{numbers,jdbcType=REAL},
      </if>
      <if test="brand != null" >
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="brandModel != null" >
        brand_model = #{brandModel,jdbcType=VARCHAR},
      </if>
      <if test="customerPayment != null" >
        customer_payment = #{customerPayment,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="specPrice != null" >
        spec_price = #{specPrice,jdbcType=REAL},
      </if>
      <if test="workerSpecPrice != null" >
        worker_spec_price = #{workerSpecPrice,jdbcType=REAL},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="specName != null" >
        spec_name = #{specName,jdbcType=VARCHAR},
      </if>
      <if test="descripation != null" >
        descripation = #{descripation,jdbcType=LONGVARCHAR},
      </if>
      <if test="images != null" >
        images = #{images,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.hualisheng.springBootWebDemo.model.OrderGoodsSpecificationWithBLOBs" >
    update order_goods_specification
    set shop_id = #{shopId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      spec_id = #{specId,jdbcType=INTEGER},
      numbers = #{numbers,jdbcType=REAL},
      brand = #{brand,jdbcType=VARCHAR},
      brand_model = #{brandModel,jdbcType=VARCHAR},
      customer_payment = #{customerPayment,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      spec_price = #{specPrice,jdbcType=REAL},
      worker_spec_price = #{workerSpecPrice,jdbcType=REAL},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      spec_name = #{specName,jdbcType=VARCHAR},
      descripation = #{descripation,jdbcType=LONGVARCHAR},
      images = #{images,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.hualisheng.springBootWebDemo.model.OrderGoodsSpecification" >
    update order_goods_specification
    set shop_id = #{shopId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      spec_id = #{specId,jdbcType=INTEGER},
      numbers = #{numbers,jdbcType=REAL},
      brand = #{brand,jdbcType=VARCHAR},
      brand_model = #{brandModel,jdbcType=VARCHAR},
      customer_payment = #{customerPayment,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      spec_price = #{specPrice,jdbcType=REAL},
      worker_spec_price = #{workerSpecPrice,jdbcType=REAL},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      spec_name = #{specName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>