<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.hualisheng.springBootWebDemo.mapper.AfterSaleHandleMapper" >
  <resultMap id="BaseResultMap" type="net.hualisheng.springBootWebDemo.model.AfterSaleHandle" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="after_buss_id" property="afterBussId" jdbcType="INTEGER" />
    <result column="is_agree" property="isAgree" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="other_type" property="otherType" jdbcType="VARCHAR" />
    <result column="pay" property="pay" jdbcType="DOUBLE" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="is_pay" property="isPay" jdbcType="INTEGER" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="cus_evidence" property="cusEvidence" jdbcType="VARCHAR" />
    <result column="wor_evidence" property="worEvidence" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="sign_imgs" property="signImgs" jdbcType="VARCHAR" />
    <result column="admin_id" property="adminId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, after_buss_id, is_agree, type, other_type, pay, reason, is_pay, pay_time, cus_evidence, 
    wor_evidence, description, sign_imgs, admin_id, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.hualisheng.springBootWebDemo.model.AfterSaleHandleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from after_sale_handle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from after_sale_handle
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from after_sale_handle
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.hualisheng.springBootWebDemo.model.AfterSaleHandleExample" >
    delete from after_sale_handle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.hualisheng.springBootWebDemo.model.AfterSaleHandle" >
    insert into after_sale_handle (id, after_buss_id, is_agree, 
      type, other_type, pay, 
      reason, is_pay, pay_time, 
      cus_evidence, wor_evidence, description, 
      sign_imgs, admin_id, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{afterBussId,jdbcType=INTEGER}, #{isAgree,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{otherType,jdbcType=VARCHAR}, #{pay,jdbcType=DOUBLE}, 
      #{reason,jdbcType=VARCHAR}, #{isPay,jdbcType=INTEGER}, #{payTime,jdbcType=TIMESTAMP}, 
      #{cusEvidence,jdbcType=VARCHAR}, #{worEvidence,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{signImgs,jdbcType=VARCHAR}, #{adminId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.hualisheng.springBootWebDemo.model.AfterSaleHandle" >
    insert into after_sale_handle
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="afterBussId != null" >
        after_buss_id,
      </if>
      <if test="isAgree != null" >
        is_agree,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="otherType != null" >
        other_type,
      </if>
      <if test="pay != null" >
        pay,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="isPay != null" >
        is_pay,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="cusEvidence != null" >
        cus_evidence,
      </if>
      <if test="worEvidence != null" >
        wor_evidence,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="signImgs != null" >
        sign_imgs,
      </if>
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="afterBussId != null" >
        #{afterBussId,jdbcType=INTEGER},
      </if>
      <if test="isAgree != null" >
        #{isAgree,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="otherType != null" >
        #{otherType,jdbcType=VARCHAR},
      </if>
      <if test="pay != null" >
        #{pay,jdbcType=DOUBLE},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="isPay != null" >
        #{isPay,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cusEvidence != null" >
        #{cusEvidence,jdbcType=VARCHAR},
      </if>
      <if test="worEvidence != null" >
        #{worEvidence,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="signImgs != null" >
        #{signImgs,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.hualisheng.springBootWebDemo.model.AfterSaleHandleExample" resultType="java.lang.Integer" >
    select count(*) from after_sale_handle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update after_sale_handle
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.afterBussId != null" >
        after_buss_id = #{record.afterBussId,jdbcType=INTEGER},
      </if>
      <if test="record.isAgree != null" >
        is_agree = #{record.isAgree,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.otherType != null" >
        other_type = #{record.otherType,jdbcType=VARCHAR},
      </if>
      <if test="record.pay != null" >
        pay = #{record.pay,jdbcType=DOUBLE},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.isPay != null" >
        is_pay = #{record.isPay,jdbcType=INTEGER},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cusEvidence != null" >
        cus_evidence = #{record.cusEvidence,jdbcType=VARCHAR},
      </if>
      <if test="record.worEvidence != null" >
        wor_evidence = #{record.worEvidence,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.signImgs != null" >
        sign_imgs = #{record.signImgs,jdbcType=VARCHAR},
      </if>
      <if test="record.adminId != null" >
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update after_sale_handle
    set id = #{record.id,jdbcType=INTEGER},
      after_buss_id = #{record.afterBussId,jdbcType=INTEGER},
      is_agree = #{record.isAgree,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      other_type = #{record.otherType,jdbcType=VARCHAR},
      pay = #{record.pay,jdbcType=DOUBLE},
      reason = #{record.reason,jdbcType=VARCHAR},
      is_pay = #{record.isPay,jdbcType=INTEGER},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      cus_evidence = #{record.cusEvidence,jdbcType=VARCHAR},
      wor_evidence = #{record.worEvidence,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      sign_imgs = #{record.signImgs,jdbcType=VARCHAR},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.hualisheng.springBootWebDemo.model.AfterSaleHandle" >
    update after_sale_handle
    <set >
      <if test="afterBussId != null" >
        after_buss_id = #{afterBussId,jdbcType=INTEGER},
      </if>
      <if test="isAgree != null" >
        is_agree = #{isAgree,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="otherType != null" >
        other_type = #{otherType,jdbcType=VARCHAR},
      </if>
      <if test="pay != null" >
        pay = #{pay,jdbcType=DOUBLE},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="isPay != null" >
        is_pay = #{isPay,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cusEvidence != null" >
        cus_evidence = #{cusEvidence,jdbcType=VARCHAR},
      </if>
      <if test="worEvidence != null" >
        wor_evidence = #{worEvidence,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="signImgs != null" >
        sign_imgs = #{signImgs,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null" >
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.hualisheng.springBootWebDemo.model.AfterSaleHandle" >
    update after_sale_handle
    set after_buss_id = #{afterBussId,jdbcType=INTEGER},
      is_agree = #{isAgree,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      other_type = #{otherType,jdbcType=VARCHAR},
      pay = #{pay,jdbcType=DOUBLE},
      reason = #{reason,jdbcType=VARCHAR},
      is_pay = #{isPay,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      cus_evidence = #{cusEvidence,jdbcType=VARCHAR},
      wor_evidence = #{worEvidence,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      sign_imgs = #{signImgs,jdbcType=VARCHAR},
      admin_id = #{adminId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>