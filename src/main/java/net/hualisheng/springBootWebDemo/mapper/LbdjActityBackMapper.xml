<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.hualisheng.springBootWebDemo.dao.LbdjActityBackMapper" >
  <resultMap id="BaseResultMap" type="net.hualisheng.springBootWebDemo.model.LbdjActityBack" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="business_id" property="businessId" jdbcType="INTEGER" />
    <result column="act_id" property="actId" jdbcType="INTEGER" />
    <result column="consume_fee" property="consumeFee" jdbcType="INTEGER" />
    <result column="rules_type" property="rulesType" jdbcType="INTEGER" />
    <result column="back_fee" property="backFee" jdbcType="INTEGER" />
    <result column="sale_name" property="saleName" jdbcType="VARCHAR" />
    <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, business_id, act_id, consume_fee, rules_type, back_fee, sale_name, customer_name, 
    status, update_time, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.hualisheng.springBootWebDemo.model.LbdjActityBackExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from lbdj_actity_back
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from lbdj_actity_back
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from lbdj_actity_back
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.hualisheng.springBootWebDemo.model.LbdjActityBackExample" >
    delete from lbdj_actity_back
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.hualisheng.springBootWebDemo.model.LbdjActityBack" >
    insert into lbdj_actity_back (id, business_id, act_id, 
      consume_fee, rules_type, back_fee, 
      sale_name, customer_name, status, 
      update_time, create_time)
    values (#{id,jdbcType=INTEGER}, #{businessId,jdbcType=INTEGER}, #{actId,jdbcType=INTEGER}, 
      #{consumeFee,jdbcType=INTEGER}, #{rulesType,jdbcType=INTEGER}, #{backFee,jdbcType=INTEGER}, 
      #{saleName,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="net.hualisheng.springBootWebDemo.model.LbdjActityBack" >
    insert into lbdj_actity_back
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="businessId != null" >
        business_id,
      </if>
      <if test="actId != null" >
        act_id,
      </if>
      <if test="consumeFee != null" >
        consume_fee,
      </if>
      <if test="rulesType != null" >
        rules_type,
      </if>
      <if test="backFee != null" >
        back_fee,
      </if>
      <if test="saleName != null" >
        sale_name,
      </if>
      <if test="customerName != null" >
        customer_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="businessId != null" >
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="actId != null" >
        #{actId,jdbcType=INTEGER},
      </if>
      <if test="consumeFee != null" >
        #{consumeFee,jdbcType=INTEGER},
      </if>
      <if test="rulesType != null" >
        #{rulesType,jdbcType=INTEGER},
      </if>
      <if test="backFee != null" >
        #{backFee,jdbcType=INTEGER},
      </if>
      <if test="saleName != null" >
        #{saleName,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null" >
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.hualisheng.springBootWebDemo.model.LbdjActityBackExample" resultType="java.lang.Integer" >
    select count(*) from lbdj_actity_back
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update lbdj_actity_back
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.businessId != null" >
        business_id = #{record.businessId,jdbcType=INTEGER},
      </if>
      <if test="record.actId != null" >
        act_id = #{record.actId,jdbcType=INTEGER},
      </if>
      <if test="record.consumeFee != null" >
        consume_fee = #{record.consumeFee,jdbcType=INTEGER},
      </if>
      <if test="record.rulesType != null" >
        rules_type = #{record.rulesType,jdbcType=INTEGER},
      </if>
      <if test="record.backFee != null" >
        back_fee = #{record.backFee,jdbcType=INTEGER},
      </if>
      <if test="record.saleName != null" >
        sale_name = #{record.saleName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerName != null" >
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update lbdj_actity_back
    set id = #{record.id,jdbcType=INTEGER},
      business_id = #{record.businessId,jdbcType=INTEGER},
      act_id = #{record.actId,jdbcType=INTEGER},
      consume_fee = #{record.consumeFee,jdbcType=INTEGER},
      rules_type = #{record.rulesType,jdbcType=INTEGER},
      back_fee = #{record.backFee,jdbcType=INTEGER},
      sale_name = #{record.saleName,jdbcType=VARCHAR},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.hualisheng.springBootWebDemo.model.LbdjActityBack" >
    update lbdj_actity_back
    <set >
      <if test="businessId != null" >
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="actId != null" >
        act_id = #{actId,jdbcType=INTEGER},
      </if>
      <if test="consumeFee != null" >
        consume_fee = #{consumeFee,jdbcType=INTEGER},
      </if>
      <if test="rulesType != null" >
        rules_type = #{rulesType,jdbcType=INTEGER},
      </if>
      <if test="backFee != null" >
        back_fee = #{backFee,jdbcType=INTEGER},
      </if>
      <if test="saleName != null" >
        sale_name = #{saleName,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null" >
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.hualisheng.springBootWebDemo.model.LbdjActityBack" >
    update lbdj_actity_back
    set business_id = #{businessId,jdbcType=INTEGER},
      act_id = #{actId,jdbcType=INTEGER},
      consume_fee = #{consumeFee,jdbcType=INTEGER},
      rules_type = #{rulesType,jdbcType=INTEGER},
      back_fee = #{backFee,jdbcType=INTEGER},
      sale_name = #{saleName,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>